package events

import (
	"context"
	"fmt"

	"github.com/go-telegram/bot"
	"github.com/go-telegram/bot/models"
)

const (
	CBAddEvent             = "add-event"
	CBTodayEvents          = "today-events"
	CBAllEvents            = "all-events"
	CBEditEvent            = "edit-event"
	CBDeleteEvent          = "delete-event"
	CBCancelAllTodayEvents = "cancel-today"
)

func HandleStart(ctx context.Context, b *bot.Bot, update *models.Update) {
	_, err := b.SendMessage(ctx, &bot.SendMessageParams{
		ChatID: update.Message.Chat.ID,
		Text:   "–í—ã–±–µ—Ä–∏ –æ–ø—Ü–∏—é:",
		ReplyMarkup: &models.InlineKeyboardMarkup{
			InlineKeyboard: [][]models.InlineKeyboardButton{
				{{Text: "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ", CallbackData: CBAddEvent}},
				{{Text: "üìÖ –ú–æ–∏ —Å–æ–±—ã—Ç–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", CallbackData: CBTodayEvents}, {Text: "üóÇ –ú–æ–∏ —Å–æ–±—ã—Ç–∏—è", CallbackData: CBAllEvents}},
				{{Text: "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ", CallbackData: CBEditEvent}, {Text: "üóë –£–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ", CallbackData: CBDeleteEvent}},
				{{Text: "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –≤—Å–µ –ø–ª–∞–Ω—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", CallbackData: CBCancelAllTodayEvents}},
			},
		},
	})
	if err != nil {
		fmt.Printf("send message error: %v\n", err)
	}
}
